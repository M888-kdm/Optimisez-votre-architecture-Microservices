---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-commandes-deployment
  labels:
    app: microservice-commandes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microservice-commandes
  template:
    metadata:
      labels:
        app: microservice-commandes
    spec:
      containers:
      - name: microservice-commandes
        image: pamoussa/mcommandes:latest
        ports:
        - containerPort: 9002
      initContainers:
      - name: wait-for-deployment
        image: busybox
        command:
          - sh
          - -c
          - until kubectl get deployment $(kubectl get configmap/wait-for-deployment-config -o=jsonpath='{.data.deploymentName}') -o jsonpath='{.status.readyReplicas}' | grep -q 1; do sleep 20; done

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-paiement-deployment
  labels:
    app: microservice-paiement
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microservice-paiement
  template:
    metadata:
      labels:
        app: microservice-paiement
    spec:
      containers:
      - name: microservice-paiement
        image: pamoussa/mpaiement:latest
        ports:
        - containerPort: 9003
      initContainers:
      - name: wait-for-deployment
        image: busybox
        command:
          - sh
          - -c
          - until kubectl get deployment $(kubectl get configmap/wait-for-deployment-config -o=jsonpath='{.data.deploymentName}') -o jsonpath='{.status.readyReplicas}' | grep -q 1; do sleep 20; done

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-produits-deployment
  labels:
    app: microservice-produits
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microservice-produits
  template:
    metadata:
      labels:
        app: microservice-produits
    spec:
      containers:
      - name: microservice-produits
        image: pamoussa/mproduits:latest
        ports:
        - containerPort: 9001
      initContainers:
      - name: wait-for-deployment
        image: busybox
        command:
          - sh
          - -c
          - until kubectl get deployment $(kubectl get configmap/wait-for-deployment-config -o=jsonpath='{.data.deploymentName}') -o jsonpath='{.status.readyReplicas}' | grep -q 1; do sleep 20; done