type Query {
  listeCommandes: [Commande],
  getCommande: Commande,
  produits: [Produit],
  produitById(id: Int): Produit,
}

type Mutation {
  createCommande(commande: CommandeInput): Commande,
  createPaiement(paiement: PaiementInput): Paiement,
  login(email:String,password: String):User,
  register(firstName:String,lastName:String,email:String,password: String):User,
}

type Produit @cacheControl(maxAge: 1200){
  id: ID,
  name: String,
  category: String,
  price: String,
  model: String,
  about: String,
  productSpecification: String,
  technicalDetails: String,
  weight: String,
  image: String,
  url: String,
  isAmazonSeller: String
}

input ProduitInput {
  id: ID,
  titre: String,
  description: String,
  image: String,
  prix: Int
}

type Commande @cacheControl(maxAge: 1200){
  id: ID,
  product: Produit,
  dateCommande: String,
  quantite: Int,
  commandePayee: Boolean
}

input CommandeInput {
  id: ID,
  productId: Int,
  dateCommande: String,
  quantite: Int,
  commandePayee: Boolean
}

input PaiementInput {
  id: ID,
  idCommande: Int,
  montant: Int,
  numeroCarte: Int
}

type Paiement @cacheControl(maxAge: 1200){
  id: ID,
  commande: Commande,
  montant: Int,
  numeroCarte: Int
}

type User{
  id: Int,
  firstName:String
  lastName:String
  email:String
  accessToken:String
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION
